<?xml version="1.0" encoding="utf-8"?>
<TEI 
  xmlns="http://www.tei-c.org/ns/1.0" 
  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:lang="en">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Open Siddur Dictionary TEI extension</title>
        <editor xml:id="EDF">Efraim Feinstein</editor>
        <editor xml:id="sbauman.emt">Syd Bauman</editor>
        <editor xml:id="LB">Lou Burnard</editor>
        <editor xml:id="SR">Sebastian Rahtz</editor>
      </titleStmt>
      <publicationStmt>
        <availability status="restricted">
          <licence target="http://www.creativecommons.org/licenses/by-sa/3.0"/>
        </availability>
      </publicationStmt>
      <notesStmt>
        <note type="ns">http://jewishliturgy.org/ns/jlptei/1.0</note>
      </notesStmt>
      <sourceDesc>
        <p>Initially created on <date when="2006-10-12T05:24:41">Thursday 12th
            October 2006</date> by the form at
        http://www.tei-c.org.uk/Roma/.</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change when="2013-03-25" who="#EDF">Modify for dictionary schema</change>
      <change when="2012-05-06" who="#EDF">Change bare TEI ODD to JLPTEI</change>
      <change when="2011-03-26" who="#SR">rewrite as new-style ODD </change>
      <change when="2007-08-12" who="#LB">Removed further elements added
since this ODD was first created </change>
      <change when="2007-04-09" who="#LB">Added prose and reorganized
structure to make it more document-like; changed deletion of attribute
decls into deletion of att.declaring class; add deletes for elements
email and floatingText added to P5 since this ODD was first created;
considered but did not implement removal of all irrelevant datatype specs...</change>
      <change when="2006-10-14" who="#sbauman.emt"> Made valid: <list><item>removed empty <att>prefix</att> attribute</item><item>added required <att>type</att> attribute to
          <gi>classSpec</gi>s</item></list><!--. <note>Sebastian had also made the above changes.</note> -->Also
        removed extraneous <gi>altIdent</gi> elements, improved
        <gi>sourceDesc</gi>, changed the <att>ident</att> of <gi>schemaSpec</gi>
        to match the filename, and added this revision description. </change>
    </revisionDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <div>
        <head>Formal declaration</head>
        <!-- common declarations: -->
        <xi:include href="common-schema.xml"/>
        <xi:include href="conditional-common.xml"/>
        <schemaSpec ident="dictionary" xml:lang="en" prefix="" ns="http://www.tei-c.org/ns/1.0">
          <moduleRef key="core" include="choice cit corr date divGen foreign head hi item l label lg list name note orig p ptr q quote ref reg sic title"/>
          <moduleRef key="tei"/>
          <moduleRef key="header" include="availability change distributor fileDesc licence publicationStmt revisionDesc sourceDesc teiHeader titleStmt"/>
          <moduleRef key="textstructure" include="TEI back body div docAuthor docDate docEdition docImprint docTitle front text titlePage titlePart"/>
          <moduleRef key="analysis" include="c interp interpGrp pc phr s w"/>
          <moduleRef key="certainty" include="respons"/>
          <moduleRef key="gaiji" include="g"/>
          <moduleRef key="linking" include="ab anchor link linkGrp seg"/>
          <moduleRef key="namesdates" include="forename genName nameLink orgName roleName surname"/>
          <moduleRef key="transcr" include="sourceDoc"/>
          <specGrpRef target="#common-specs"/>
          <specGrpRef target="#conditional-specs"/>
          
          <elementSpec ident="text" module="textstructure" mode="change">
            <classes mode="replace">
              <memberOf key="att.global"/>
              <memberOf key="att.typed"/>
              <memberOf key="att.declaring" mode="delete"/>
            </classes>
            <content>
              <rng:group xmlns:rng="http://relaxng.org/ns/structure/1.0">
                <rng:optional>
                  <rng:ref name="front"/>
                </rng:optional>
                <rng:choice>
                  <rng:ref name="body"/>
                </rng:choice>
                <rng:optional>
                  <rng:ref name="back"/>
                </rng:optional>
              </rng:group>
            </content>
          </elementSpec>
          <elementSpec ident="layer" prefix="j" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
            <desc>A hierarchic layer of text. @type should indicate what layer is being provided, and all the top level contained elements should be consistent with that type.</desc>
            <classes>
              <memberOf key="att.global"/>
            </classes>
            <content xmlns:rng="http://relaxng.org/ns/structure/1.0">
              <rng:group xmlns="http://relaxng.org/ns/structure/1.0">
                <rng:zeroOrMore>
                  <rng:choice>
                    <rng:ref name="model.divTop"/>
                    <!--        <rng:ref name="model.headLike"/>-->
                    <rng:ref name="model.global"/>
                  </rng:choice>
                </rng:zeroOrMore>
                <rng:optional>
                  <rng:choice>
                    <rng:group>
                      <rng:oneOrMore>
                        <rng:choice>
                          <rng:ref name="model.divLike"/>
                          <rng:ref name="model.divGenLike"/>
                        </rng:choice>
                        <rng:zeroOrMore>
                          <rng:ref name="model.global"/>
                        </rng:zeroOrMore>
                      </rng:oneOrMore>
                    </rng:group>
                    <rng:group>
                      <rng:oneOrMore>
                        <rng:group>
                          <rng:ref name="model.common"/>
                        </rng:group>
                        <rng:zeroOrMore>
                          <rng:ref name="model.global"/>
                        </rng:zeroOrMore>
                      </rng:oneOrMore>
                      <rng:zeroOrMore>
                        <rng:choice>
                          <rng:ref name="model.divLike"/>
                          <rng:ref name="model.divGenLike"/>
                        </rng:choice>
                        <rng:zeroOrMore>
                          <rng:ref name="model.global"/>
                        </rng:zeroOrMore>
                      </rng:zeroOrMore>
                    </rng:group>
                  </rng:choice>
                  <rng:zeroOrMore>
                    <rng:group>
                      <rng:ref name="model.divBottom"/>
                    </rng:group>
                    <rng:zeroOrMore>
                      <rng:ref name="model.global"/>
                    </rng:zeroOrMore>
                  </rng:zeroOrMore>
                </rng:optional>
              </rng:group>
            </content>
            <attList>
              <attDef ident="type" mode="add" usage="req">
                <desc>Indicates what type of hierarchic layer is being constructed</desc>
                <datatype minOccurs="1" maxOccurs="1">
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="data.enumerated"/>
                </datatype>
                <valList type="open">
                  <valItem ident="p"/>
                  <valItem ident="s"/>
                  <valItem ident="l"/>
                  <valItem ident="lg"/>
                  <valItem ident="cit"/>
                  <valItem ident="choice"/>
                  <valItem ident="verse"/>
                </valList>
              </attDef>
            </attList>
            <constraintSpec ident="layer-1" scheme="isoschematron">
              <constraint>
                <sch:assert
                  test="
                  every $result in (
                    for $ptr in descendant::tei:ptr,
                      $token in tokenize($ptr/@target,'\s+')
                      return not(substring-before($token, '#'))
                  ) satisfies $result">
                  Only internal pointers are allowed inside concurrent structures
                </sch:assert>
                <sch:assert
                  test="
                  every $result in (
                    for 
                      $ptr in descendant::tei:ptr,
                      $token in tokenize($ptr/@target,'\s+'),
                      $id in (
                        if (starts-with($token, '#range('))
                        then
                          tokenize(
                            substring-before(
                              substring-after(
                                $token,
                                '#range('
                              ),
                              ')'
                            ),
                            ','
                          )[.]
                        else substring-after($token, '#')
                      )
                    return exists(/id($id)/ancestor::j:streamText)
                  ) satisfies $result">
                  All pointers in layers must point into the text stream.  
                </sch:assert>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="concurrent" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
            <desc>A list of concurrent hierarchies of one or more layers.</desc>
            <classes>
              <memberOf key="att.global"/>
            </classes>
            <content xmlns:rng="http://relaxng.org/ns/structure/1.0">
              <rng:oneOrMore>
                <rng:ref name="layer"/>
              </rng:oneOrMore>
            </content>
          </elementSpec>
          <elementSpec ident="streamText" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
            <desc>A continuous stream of segmented text, suitable for concurrent hierarchies. Every element contained in a textStream must be able to be referenced by @xml:id or using a range XPointer.</desc>
            <classes>
              <memberOf key="att.global"/>
            </classes>
            <content xmlns:rng="http://relaxng.org/ns/structure/1.0">
              <rng:group xmlns="http://relaxng.org/ns/structure/1.0">
                <rng:oneOrMore>
                  <rng:choice>
                    <rng:ref name="model.segLike"/>
                    <rng:ref name="model.milestoneLike"/>
                    <rng:ref name="ptr"/>
                  </rng:choice>
                </rng:oneOrMore>
              </rng:group>
            </content>
            <constraintSpec ident="streamText-1" scheme="isoschematron">
              <constraint>
                <sch:report test="*[not(@xml:id)]">An @xml:id attribute is required on all elements in a text stream.</sch:report>
              </constraint>
            </constraintSpec>
          </elementSpec>
        </schemaSpec>
      </div>
    </body>
  </text>
</TEI>
