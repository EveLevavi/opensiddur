<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="2.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:j="http://jewishliturgy.org/ns/jlptei/1.0" 
  xmlns:func="http://jewishliturgy.org/ns/functions/xslt"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xd="http://www.pnp-software.com/XSLTdoc"
  exclude-result-prefixes="#all">
  <xsl:import href="../copy-context.xsl2"/>
  <xsl:include href="default.xsl2"/>
  <xsl:include href="ignore-or-pass.xsl2"/>
  <xsl:include href="ptr.xsl2"/>
  <xsl:include href="concurrent.xsl2"/>
  <xsl:include href="conditionals.xsl2"/>
  <xsl:include href="parallel.xsl2"/>
  <xsl:include href="standoff.xsl2"/>
  <xsl:include href="translit.xsl2"/>
  <xsl:include href="TEI.xsl2"/>
  <xsl:include href="w-or-pc.xsl2"/>

  <xd:doc type="stylesheet">
    <xd:short>Include other stylesheets that do the work.</xd:short>
    <xd:copyright>Copyright 2009-2010 Efraim Feinstein
    </xd:copyright>
    <xd:detail>
      <p>This program is free software: you can redistribute it
        and/or modify
        it under the terms of the GNU Lesser General Public License as
        published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.</p>

      <p>This program is distributed in the hope that it will be
        useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
        GNU Lesser General Public License for more details.</p>

      <p>
        You should have received a copy of the GNU Lesser General Public
        License along with this program. If not, see
        <a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/
        </a>
        .
      </p>
    </xd:detail>
    <xd:svnId>$Id: stage1.xsl2 687 2011-01-23 23:36:48Z efraim.feinstein $</xd:svnId>
  </xd:doc>

  <xsl:strip-space elements="*"/>
  
  <xd:doc>
    <xd:short>When @xml:lang comes up, translate it to 
    @xml:lang and @lang.  TODO: really need to look for any change in 
    language</xd:short>
    <xd:detail>The override for title is really a kluge,
    This probably should do a better job of figuring out whether it 
    really needs to dump the attributes and context</xd:detail>
  </xd:doc>
  <xsl:template match="*[not(self::tei:title)][@xml:lang]" priority="50">
    <xsl:param name="output-context-lang" as="xs:string?" tunnel="yes" 
      select="()"/>
    
    <xsl:variable name="new-lang" select="@xml:lang" as="xs:string"/>  
    <xsl:variable name="result" as="node()*">
      <xsl:next-match>
        <xsl:with-param name="output-context-lang" as="xs:string"
          tunnel="yes" select="@xml:lang"/>
      </xsl:next-match>
    </xsl:variable>
    
    
    <xsl:for-each select="$result">
      <xsl:variable name="result-lang" as="xs:string" 
        select="(@xml:lang,$new-lang)[1]"/>
        
      <xsl:copy>
        <xsl:choose>
          <xsl:when test="not($result-lang eq $output-context-lang)">
            <xsl:call-template name="copy-attributes-and-context">
              <xsl:with-param name="seq-lang" as="xs:string" 
                select="(@xml:lang,$new-lang)[1]"/>
              <xsl:with-param name="seq-base" as="empty-sequence()" select="()"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:copy-of select="@* except (@xml:lang,@lang)"/>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:sequence select="child::node()"/>
      </xsl:copy>
    </xsl:for-each>
  </xsl:template>
    
</xsl:stylesheet>
