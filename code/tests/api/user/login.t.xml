<?xml version="1.0" encoding="utf-8"?>
<TestSuite
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:j="http://jewishliturgy.org/ns/jlptei/1.0"
  xmlns:jx="http://jewishliturgy.org/ns/jlp-processor"
  xmlns:http="http://expath.org/ns/http-client">
  <suiteName>Login</suiteName>
  <description>
    <p>Test login</p>
    <author>Efraim Feinstein</author>
  </description>
  <setup/>
  <namespace prefix="httpclient">http://exist-db.org/xquery/httpclient</namespace>
  <namespace prefix="html">http://www.w3.org/1999/xhtml</namespace>
  <namespace prefix="tei">http://www.tei-c.org/ns/1.0</namespace>
  <namespace prefix="j">http://jewishliturgy.org/ns/jlptei/1.0</namespace>
  <namespace prefix="jx">http://jewishliturgy.org/ns/jlp-processor</namespace>
  <imports>
    import module namespace apitest="http://jewishliturgy.org/modules/apitest"
      at "xmldb:exist:///code/tests/api/apitest.xqm";
  </imports>
  <TestSet>
    <testName>HTTP GET while logged out</testName>
    <setup/>
    <imports>
    </imports>
    <functions>
    </functions>
    <tearDown/>
    <test>
      <task>while not logged in, accept text/plain...</task>
      <code><![CDATA[
        apitest:get("/code/api/user/login", <header name="Accept" value="text/plain"/>)
      ]]></code>
      <xpath desc="returns empty">empty(//http:body/*)</xpath>
      <xpath desc="returns HTTP status code 204">./@statusCode = 204</xpath>
    </test>
    <test>
      <task>while coming in with HTTP Basic authentication...</task>
      <code><![CDATA[
        apitest:get("/code/api/user/login", 
          (<header name="Accept" value="text/plain"/>, 
          apitest:auth-header("testuser", "testuser")))
      ]]></code>
      <xpath desc="returns the user name">empty(.//httpclient:body/*)</xpath>
      <xpath desc="returns text/plain content type">.//httpclient:body/@type = "text"</xpath>
      <xpath desc="returns HTTP status code 200">./@statusCode = 200</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>HTTP GET while logged in</testName>
    <setup><code><![CDATA[
    apitest:put("/code/api/user/login/testuser", 
      <header name="Accept" value="text/plain"/>, 
      "testuser")
    ]]></code></setup>
    <imports>
    </imports>
    <functions>
    </functions>
    <tearDown><code><![CDATA[
    apitest:clear()
    ]]></code></tearDown>
    <test>
      <task>Accept text/plain...</task>
      <code><![CDATA[
        apitest:get("/code/api/user/login", <header name="Accept" value="text/plain"/>)
      ]]></code>
      <xpath desc="returns the user name">.//httpclient:body = "testuser"</xpath>
      <xpath desc="returns text data type">.//httpclient:body/@type = "text"</xpath>
      <xpath desc="returns HTTP status code 200">./@statusCode = 200</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>HTTP PUT</testName>
    <setup/>
    <imports>
    </imports>
    <functions>
    </functions>
    <tearDown><code><![CDATA[
      apitest:clear()
    ]]></code></tearDown>
    <test>
      <task>Correct login and user name, content type text/plain</task>
      <code><![CDATA[
        apitest:put("/code/api/user/login/testuser", 
          (), 
          "testuser")
      ]]></code>
      <xpath desc="Returns HTTP status code 204">./@statusCode = 204</xpath>
    </test>
    <test>
      <task>Correct login and user name, content type XML</task>
      <code><![CDATA[
        apitest:put("/code/api/user/login/testuser", 
          (), <password>testuser</password>)
      ]]></code>
      <xpath desc="Returns HTTP status code 204">./@statusCode = 204</xpath>
    </test>
    <test>
      <task>Correct login and user name, content type x-www-form-urlencoded</task>
      <code><![CDATA[
        apitest:put-form("/code/api/user/login/testuser", 
          (), 
          <httpclient:field name="password" type="text" value="testuser"/>)
      ]]></code>
      <xpath desc="Returns HTTP status code 204">./@statusCode = 204</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>HTTP POST</testName>
    <setup/>
    <imports>
    </imports>
    <functions>
    </functions>
    <tearDown/>
    <test>
      <task>PUT</task>
      <code><![CDATA[
        apitest:post("/code/api/user/login", (), <x/>)
      ]]></code>
      <class href="../common.t.xml#InvalidMethod"/>
    </test>
  </TestSet>
  <TestSet>
    <testName>HTTP DELETE while logged in</testName>
    <setup><code><![CDATA[
    apitest:put("/code/api/user/login/testuser", 
      <header name="Accept" value="text/plain"/>, 
      "testuser")
    ]]></code></setup>
    <imports></imports>
    <functions>
    </functions>
    <tearDown><code><![CDATA[
    apitest:clear() 
    ]]></code></tearDown>
    <test>
      <task>Attempt to delete login</task>
      <code><![CDATA[
        apitest:delete("/code/api/user/login", ())
      ]]></code>
      <xpath desc="Returns HTTP status code 204">./@statusCode = 204</xpath>
      <xpath desc="User is logged out"><![CDATA[
        empty(
          apitest:get("/code/api/user/login", 
            <header name="Accept" value="text/plain"/>
          )//httpclient:body/node())
      ]]></xpath> 
    </test>
  </TestSet>
  <TestSet>
    <testName>HTTP DELETE while logged out</testName>
    <setup></setup>
    <imports></imports>
    <functions>
    </functions>
    <tearDown></tearDown>
    <test>
      <task>Attempt to delete login</task>
      <code><![CDATA[
        apitest:delete("/code/api/user/login", ())
      ]]></code>
      <xpath desc="Returns HTTP status code 204">./@statusCode = 204</xpath> 
    </test>
  </TestSet>
</TestSuite>