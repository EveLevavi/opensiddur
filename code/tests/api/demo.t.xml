<?xml version="1.0" encoding="UTF-8"?>
<TestSuite xmlns:tr="http://jewishliturgy.org/ns/tr/1.0">
  <suiteName>Demo API</suiteName>
  <description>
    <p>Test demo API function calls</p>
    <author>Efraim Feinstein</author>
    <copyright>Copyright 2012 Efraim Feinstein, 
    Licensed under the GNU Lesser General Public License, version 3 or later</copyright>
  </description>
  <asUser>testuser</asUser>
  <password>testuser</password>
  <imports>
  import module namespace demo="http://jewishliturgy.org/api/demo"
    at "xmldb:exist:///code/api/demo.xqm";
  </imports>
  <namespace prefix="tr">http://jewishliturgy.org/ns/tr/1.0</namespace>
  <namespace prefix="rest">http://exquery.org/ns/rest/annotation/</namespace>
  <namespace prefix="output">http://www.w3.org/2010/xslt-xquery-serialization</namespace>
  <namespace prefix="html">http://www.w3.org/1999/xhtml</namespace>
  <setup>
    <create-collection parent="/data/transliteration" name="1900"/>
    <create-collection parent="/data/transliteration/1900" name="01"/>
    <store collection="/data/transliteration/1900/01" name="Test.xml">
      <tr:schema>
        <tr:title xml:lang="en">Test</tr:title>
        <tr:description xml:lang="en">A test</tr:description>
        <tr:table>
          <tr:lang in="en" out="en-Latn"/>
          <tr:tr from='a' to='b' />
          <tr:tr from='b' to='c' />
          <tr:tr from='c' to='d' />
          <tr:tr from='d' to='e' />
          <tr:tr from='e' to='f' />
          <tr:tr from='f' to='g' />
          <tr:tr from='g' to='h' />
          <tr:tr from='h' to='i' />
          <tr:tr from='i' to='j' />
          <tr:tr from='j' to='k' />
          <tr:tr from='k' to='l' />
          <tr:tr from='l' to='m' />
          <tr:tr from='m' to='n' />
          <tr:tr from='n' to='o' />
          <tr:tr from='o' to='p' />
          <tr:tr from='p' to='q' />
          <tr:tr from='q' to='r' />
          <tr:tr from='r' to='s' />
          <tr:tr from='s' to='t' />
          <tr:tr from='t' to='u' />
          <tr:tr from='u' to='v' />
          <tr:tr from='v' to='w' />
          <tr:tr from='w' to='x' />
          <tr:tr from='x' to='y' />
          <tr:tr from='y' to='z' />
          <tr:tr from='z' to='a' />
        </tr:table>
      </tr:schema>
    </store>
  </setup>
  <tearDown>
    <remove-collection collection="/data/transliteration/1900"/>
  </tearDown>
  <TestSet>
    <testName>demo:transliterate-xml()</testName>
    <!-- the username/password will not be stored in the session,
    so go in as a guest -->
    <asUser/>
    <password/>
    <test>
      <task>Post XML and a valid transliteration schema</task>
      <code><![CDATA[
      demo:transliterate-xml(
        document{
          <transliterate xml:lang="en">abcdef ghi</transliterate>
        },
        "Test")
      ]]></code>
      <expected desc="transliterated XML">
        <transliterate xml:lang="en-Latn">
          bcdefg hij
        </transliterate>
      </expected>
    </test>
    <test>
      <task>Post XML and a nonexistent transliteration schema</task>
      <code><![CDATA[
      demo:transliterate-xml(
        document{
          <transliterate xml:lang="en">abcdef ghi</transliterate>
        },
        "NotExistent")
      ]]></code>
      <xpath desc="returns status code 404">self::rest:response/http:response/@status=404</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>demo:transliterate-text()</testName>
    <asUser/>
    <password/>
    <test output="mixed">
      <task>Post text and a valid transliteration schema</task>
      <code><![CDATA[
      demo:transliterate-text(
        "abcdef ghi",
        "Test")
      ]]></code>
      <xpath desc="output is text/plain">$output[1]/self::rest:response/output:serialization-parameters/output:method/@value="text"</xpath>
      <xpath desc="transliterated text">$output[2]="bcdefg hij"</xpath>
    </test>
    <test output="mixed">
      <task>Post text and a nonexistent transliteration schema</task>
      <code><![CDATA[
      demo:transliterate-text(
        "abcdef ghi",
        "NotExistent")
      ]]></code>
      <xpath desc="returns status code 404">$output[1]/self::rest:response/http:response/@status=404</xpath>
    </test>
  </TestSet>
</TestSuite>