<TestSuite>
  <description>
    <p>Tests for the reference index implementation</p>
    <author>Efraim Feinstein</author>
    <copyright>Copyright 2012 Efraim Feinstein,
    Open Siddur Project,
    Licensed under the GNU Lesser General Public License, version 3 or later</copyright>
  </description>
  <imports>
  import module namespace ridx="http://jewishliturgy.org/modules/refindex"
    at "xmldb:exist:///code/modules/refindex.xqm";
  import module namespace mirror="http://jewishliturgy.org/modules/mirror"
    at "xmldb:exist:///code/modules/mirror.xqm";
  import module namespace magic="http://jewishliturgy.org/magic"
    at "xmldb:exist:///code/magic/magic.xqm";
  </imports>
  <setup>
    <code><![CDATA[
    if (xmldb:collection-available($ridx:ridx-path))
    then ()
    else system:as-user("admin", $magic:password, (
      let $create := mirror:create($ridx:ridx-path, "/data")
      let $stored := xmldb:store($ridx:ridx-path, "created-by-test.xml", <created/>)
      return ()
    ))
    ]]></code>
  </setup>
  <tearDown>
    <code><![CDATA[
    if (doc-available($ridx:ridx-path || "/created-by-test.xml"))
    then system:as-user("admin", $magic:password, xmldb:remove($ridx:ridx-path))
    else ()
    ]]></code>
  </tearDown>
  <TestSet>
    <testName>With a disabled index...</testName>
    <setup>
      <code><![CDATA[
      system:as-user("admin", $magic:password, (
        if (doc-available($ridx:ridx-path || "/" || $ridx:disable-flag))
        then xmldb:store($ridx:ridx-path, "test-already-disabled.xml", 
          doc($ridx:ridx-path || "/" || $ridx:disable-flag))
        else (),
        xmldb:store($ridx:ridx-path, $ridx:disable-flag, <disabled/>)
      ))
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      system:as-user("admin", $magic:password, (
        if (doc-available($ridx:ridx-path || "/test-already-disabled.xml"))
        then xmldb:store($ridx:ridx-path, $ridx:disable-flag 
          doc($ridx:ridx-path || "/test-already-disabled.xml"))
        else 
          try {
            xmldb:remove($ridx:ridx-path, $ridx:disable-flag)
          }
          catch * { () }
      ))
      ]]></code>
    </tearDown>
    <test output="text">
      <task>ridx:is-enabled()</task>
      <code><![CDATA[
      ridx:is-enabled()
      ]]></code>
      <expected desc="returns false">false</expected>
    </test>
    <test>
      <task>ridx:enable()</task>
      <code><![CDATA[
      ridx:enable()
      ]]></code>
      <xpath desc="disable flag removed">not(doc-available($ridx:ridx-path || "/" || $ridx:disable-flag))</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>With an enabled index...</testName>
    <setup>
      <code><![CDATA[
      system:as-user("admin", $magic:password, (
      if (doc-available($ridx:ridx-path || "/" || $ridx:disable-flag))
      then (
        xmldb:store($ridx:ridx-path, "test-was-disabled.xml", 
          doc($ridx:ridx-path || "/" || $ridx:disable-flag)),
        xmldb:remove($ridx:ridx-path, $ridx:disable-flag)
      )
      else ()
      ))
      ]]></code>
    </setup>
    <tearDown>
      <code><![CDATA[
      system:as-user("admin", $magic:password, (
      if (doc-available($ridx:ridx-path || "/test-was-disabled.xml"))
      then (
        xmldb:store($ridx:ridx-path, $ridx:disable-flag, 
          doc($ridx:ridx-path || "/test-was-disabled.xml")),
        xmldb:remove($ridx:ridx-path, "test-was-disabled.xml")
      )
      else 
        try {
          xmldb:remove($ridx:ridx-path, $ridx:disable-flag)
        }
        catch * { () }
      ))
      ]]></code>
    </tearDown>
    <test>
      <task>ridx:disable()</task>
      <code><![CDATA[
      ridx:disable()
      ]]></code>
      <xpath desc="disable flag is set">doc-available($ridx:ridx-path || "/" || $ridx:disable-flag)</xpath>
    </test>
    <test output="text">
      <task>ridx:is-enabled()</task>
      <code><![CDATA[
      ridx:is-enabled()
      ]]></code>
      <expected desc="returns true">true</expected>
    </test>
  </TestSet>
  <TestSet>
    <testName>ridx:reindex()</testName>
    <setup>
      <copy source="/code/tests/modules" 
        name="reference-target.xml" 
        destination="/data/tests"/>
      <copy source="/code/tests/modules" 
        name="reference-source.xml" 
        destination="/data/tests"/>
    </setup>
    <tearDown>
      <remove-document collection="/data/tests" name="reference-target.xml"/>
      <remove-document collection="/data/tests" name="reference-source.xml"/>
      <remove-document collection="/refindex/tests" name="reference-target.xml"/>
      <remove-document collection="/refindex/tests" name="reference-source.xml"/>
    </tearDown>
    <test>
      <task>index a source document</task>
      <code><![CDATA[
      ridx:reindex("/data/tests", "reference-source.xml")
      ]]></code>
      <xpath desc="reference document created">doc-available("/refindex/tests/reference-source.xml")</xpath>      
    </test>
    <test>
      <task>index the target document</task>
      <code><![CDATA[
      ridx:reindex("/data/tests", "reference-target.xml")
      ]]></code>
      <xpath desc="target document exists in reference index">doc-available("/refindex/tests/reference-target.xml")</xpath>
      <xpath desc="target document in reference index is empty">empty(doc("/refindex/tests/reference-target.xml")/*/*)</xpath>
    </test>
  </TestSet>
  <TestSet>
    <testName>ridx:query()#2</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query()#3</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query()#4</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query-all()#1</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query-all()#2</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query-all()#3</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query-document()#1</testName>
  </TestSet>
  <TestSet>
    <testName>ridx:query-document()#2</testName>
  </TestSet>
</TestSuite>